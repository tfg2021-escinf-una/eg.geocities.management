name: Build and Deploy in DEV Namespace

on: 
 push:
  branches:
    - feature/including_semantic_versioning

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '12', '14', '16' ]
    name: Node ${{ matrix.node }} sample
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Build Applications Within the Repository.
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
    - run: npm install
    - run: npm run build

    - name: Application Versioning
      id: appVersioning
      uses: paulhatch/semantic-version@v4.0.2
      with:
        # The prefix to use to identify tags
        tag_prefix: "dev-"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-prerelease${increment}"
        # Named version, will be used as suffix for name version tag
        namespace: ''
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: true
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: true
        # The output method used to generate list of users, 'csv' or 'json'.
        user_format_type: "csv"
    
    - name: Verifying Docker Credentials
      uses: actions-hub/docker/login@master 
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS }}   

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USER }}/eg-geocities-management:${{ steps.appVersioning.outputs.version_tag }} -f ./apps/geography/Dockerfile .
   